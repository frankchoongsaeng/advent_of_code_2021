[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[warn] No sbt.version set in project/build.properties, base directory: C:\Users\Training\Documents\advent_of_code
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 17)
[debug] Load.defaultLoad until apply took 237.425099ms
[debug]     Load.loadUnit: plugins took 79.2607ms
[debug]     Load.loadUnit: defsScala took 0.222701ms
[debug] [Loading] Scanning directory C:\Users\Training\Documents\advent_of_code
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Training\Documents\advent_of_code, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.8392 ms
[debug]         Load.resolveProject(advent_of_code) took 32.9982ms
[debug]       Load.loadTransitive: finalizeProject(Project(id advent_of_code, base: C:\Users\Training\Documents\advent_of_code, plugins: List(<none>))) took 83.710001ms
[debug] [Loading] Done in C:\Users\Training\Documents\advent_of_code, returning: (advent_of_code)
[debug]     Load.loadUnit: loadedProjectsRaw took 101.044699ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.196799ms
[debug]   Load.loadUnit(file:/C:/Users/Training/Documents/advent_of_code/, ...) took 186.1168ms
[debug] Load.apply: load took 373.996001ms
[debug] Load.apply: resolveProjects took 5.388101ms
[debug] Load.apply: finalTransforms took 49.953699ms
[debug] Load.apply: config.delegates took 7.271599ms
[debug] Load.apply: Def.make(settings)... took 365.6263ms
[debug] Load.apply: structureIndex took 80.5709ms
[debug] Load.apply: mkStreams took 1.8118ms
[info] set current project to advent_of_code (in build file:/C:/Users/Training/Documents/advent_of_code/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-d04f8b3404f1abb4380b
[debug] Writing bsp connection file
[info] started sbt server
